source:
    build: osmaxx
    user: osmaxx
    volumes:
        - osmaxx:/home/osmaxx/source

media:
    build: docker/file-containers
    user: osmaxx
#    command: echo "done"
    volumes:
#        - docker_mounts/private_media:/home/osmaxx/private_media
        - docker_mounts/media:/home/osmaxx/media
        - docker_mounts/static:/home/osmaxx/static

database:
    build: docker/postgis

webapp:
    build: osmaxx
    user: osmaxx
    # on production, enable the following
    # command: /bin/bash -s ". $ACTIVATE;gunicorn -b 0.0.0.0:8000 wsgi:application"
    command: /bin/bash -c ". $ACTIVATE;python manage.py collectstatic --noinput;python manage.py runserver_plus 0.0.0.0:8000"
    volumes_from:
        - source
        - media
    links:
        - rabbitmq:rabbit
        - database
    ports:
        - "8000:8000"
    environment:
        # --link some-rabbit:rabbit "just works"
         - CELERY_BROKER_URL=amqp://guest@rabbit
         - DATABASE_URL=postgis://postgres@database/postgres

rabbitmq:
    image: rabbitmq:3

celery:
    build: osmaxx
    user: osmaxx
    command: /bin/bash -c ". $ACTIVATE;celery -A config worker -l info"
    links:
        - rabbitmq:rabbit
        - database
    volumes_from:
        - source
    environment:
        # --link some-rabbit:rabbit "just works"
        - CELERY_BROKER_URL=amqp://guest@rabbit//
        - DATABASE_URL=postgis://postgres@database/postgres

# webserver:
#     build: webserver
#     ports:
#         - "80:80"
#         - "443:443"
#     links:
#         - webapp
